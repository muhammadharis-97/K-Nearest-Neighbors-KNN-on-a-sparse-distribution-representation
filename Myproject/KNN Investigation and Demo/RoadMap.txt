
Task 1: Focus on KNN (K-Nearest Neighbors) Only

Objective: Provide experiments and unit tests demonstrating how KNN works natively.
Details: This task involves implementing and testing the KNN algorithm without any modifications. This could include creating a dataset, training the KNN model, and evaluating its performance using experiments and unit tests. The goal is to understand the basic functionality and behavior of KNN in its standard form.

Task 2: KNN with SP-Generated SDR (Spatial Density Representation)

Objective: Implement and test KNN using SDR generated by the spatial pooler (SP).
Details: This task requires integrating the spatial pooler into the KNN workflow. The spatial pooler generates a spatial representation of the input data, which is then used as input for the KNN algorithm. Experiments and unit tests should demonstrate the effectiveness of combining SP-generated SDR with KNN, possibly comparing the results to the native KNN approach from Task 1.

Task 3: SDR Generated by TM (Temporal Memory) with KNN

Objective: Perform experiments and unit tests on KNN using SDR generated by the temporal memory (TM).
Details: This task involves incorporating temporal memory into the KNN workflow. The TM generates a temporal representation of the input data, and the resulting SDR is used as input for the KNN algorithm. The focus here is on understanding how temporal aspects affect the performance of KNN. Comparisons with previous tasks can help identify the impact of temporal information on the KNN model.

Task 4: Multisequence Learning Experiment

Objective: Replace the HtmClassifier with the KNN classifier in a multisequence learning experiment.
Details: This task involves replacing the existing HTM classifier with the KNN classifier in a multisequence learning experiment. Multisequence learning typically deals with learning and predicting sequences of data. The goal is to assess how well the KNN classifier performs in comparison to the HTM classifier in a scenario that involves multiple sequences of data.

Overall, these tasks aim to explore and understand the behavior and performance of the KNN algorithm in different contexts, particularly when combined with spatial and temporal representations generated by the spatial pooler and temporal memory. The context of multisequence learning adds an additional layer of complexity and real-world relevance to the experimentation and testing.






